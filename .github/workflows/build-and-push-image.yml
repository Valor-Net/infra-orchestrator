name: Build and Push to ECR

on:
  workflow_call:
    inputs:
      service-name:
        required: true
        type: string
      nginx-sidecar:
        required: true
        type: boolean
      semver:
        required: false
        type: string
        default: ""
    outputs:
      image-tag:
        description: "Generated image tag"
        value: ${{ jobs.build.outputs.image-tag }}
      semver:
        description: "Image semantic version"
        value: ${{ jobs.build.outputs.semver }}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.meta.outputs.image-tag }}
      semver: ${{ inputs.semver }}

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
          ref: ${{ github.sha }}
          fetch-depth: 0
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      
      - name: Generate tags
        id: generate-tags
        run: |
          SHA_SHORT="${GITHUB_SHA:0:8}"
          if [[ "${GITHUB_REF_NAME}" == "main" ]]; then
            PREFIX="prod"
          else
            PREFIX="stg"
          fi
          echo "image-tag=$SHA_SHORT" >> $GITHUB_OUTPUT
          echo "IMAGE_TAG=$SHA_SHORT" >> $GITHUB_ENV
          echo "TAG_SHORT=${PREFIX}-${SHA_SHORT}" >> $GITHUB_ENV

          if [ -n "${{ inputs.semver }}" ]; then
            V="${{ inputs.semver }}"
            echo "semver=${PREFIX}-$V" >> $GITHUB_OUTPUT
            echo "TAG_SEMVER=${PREFIX}-$V" >> $GITHUB_ENV
            echo "HAS_SEMVER=true" >> $GITHUB_ENV
          else
            V=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
            if [ -n "$V" ]; then
              echo "semver=${PREFIX}-$V" >> $GITHUB_OUTPUT
              echo "TAG_SEMVER=${PREFIX}-$V" >> $GITHUB_ENV
              echo "HAS_SEMVER=true" >> $GITHUB_ENV
            else
              echo "HAS_SEMVER=false" >> $GITHUB_ENV
            fi
          fi

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build and push main application image
        id: build-main
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_REGISTRY_URL }}/base-core-${{ inputs.service-name }}-repo:${{ env.TAG_SHORT }}
            ${{ secrets.DOCKER_REGISTRY_URL }}/base-core-${{ inputs.service-name }}-repo:${{ env.IMAGE_TAG }}
            ${{ secrets.DOCKER_REGISTRY_URL }}/base-core-${{ inputs.service-name }}-repo:${{ github.sha }}
            ${{ secrets.DOCKER_REGISTRY_URL }}/base-core-${{ inputs.service-name }}-repo:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Tag main application image with semver
        if: env.HAS_SEMVER == 'true'
        run: |
          docker tag ${{ secrets.DOCKER_REGISTRY_URL }}/base-core-${{ inputs.service-name }}-repo:${{ env.IMAGE_TAG }} \
            ${{ secrets.DOCKER_REGISTRY_URL }}/base-core-${{ inputs.service-name }}-repo:${{ env.TAG_SEMVER }}
          docker push ${{ secrets.DOCKER_REGISTRY_URL }}/base-core-${{ inputs.service-name }}-repo:${{ env.TAG_SEMVER }}
      
      - name: Build and push nginx sidecar image
        id: build-nginx
        if: inputs.nginx-sidecar == true
        uses: docker/build-push-action@v5
        with:
          context: ./docker/nginx
          push: true
          tags: |
            ${{ secrets.DOCKER_REGISTRY_URL }}/base-core-${{ inputs.service-name }}-nginx-repo:${{ env.TAG_SHORT }}
            ${{ secrets.DOCKER_REGISTRY_URL }}/base-core-${{ inputs.service-name }}-nginx-repo:${{ env.IMAGE_TAG }}
            ${{ secrets.DOCKER_REGISTRY_URL }}/base-core-${{ inputs.service-name }}-nginx-repo:${{ github.sha }}
            ${{ secrets.DOCKER_REGISTRY_URL }}/base-core-${{ inputs.service-name }}-nginx-repo:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Tag nginx sidecar image with semver
        if: inputs.nginx-sidecar == true && env.HAS_SEMVER == 'true'
        run: |
          docker tag ${{ secrets.DOCKER_REGISTRY_URL }}/base-core-${{ inputs.service-name }}-nginx-repo:${{ env.IMAGE_TAG }} \
            ${{ secrets.DOCKER_REGISTRY_URL }}/base-core-${{ inputs.service-name }}-nginx-repo:${{ env.TAG_SEMVER }}
          docker push ${{ secrets.DOCKER_REGISTRY_URL }}/base-core-${{ inputs.service-name }}-nginx-repo:${{ env.TAG_SEMVER }}
      
      
      - name: Build summary
        run: |
          echo "### Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Service**: ${{ inputs.service-name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Image Tag**: ${{ env.IMAGE_TAG }}" >> $GITHUB_STEP_SUMMARY
          echo "**Semantic Version**: ${{ inputs.semver }}" >> $GITHUB_STEP_SUMMARY
          echo "**Main Image**: \`${{ secrets.DOCKER_REGISTRY_URL }}/${{ inputs.service-name }}:${{ env.IMAGE_TAG }}\`" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ inputs.nginx-sidecar }}" == "true" ]; then
            echo "**Nginx Image**: \`${{ secrets.DOCKER_REGISTRY_URL }}/${{ inputs.service-name }}-nginx:${{ env.IMAGE_TAG }}\`" >> $GITHUB_STEP_SUMMARY
          fi